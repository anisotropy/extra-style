/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\n__webpack_require__(1);\n\n__webpack_require__(2);//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcHAvZXh0cmEtc3R5bGUuanM/ZWQ0YiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBOztBQUNBIiwiZmlsZSI6IjAuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgJy4vc3RhdGljLXN0eWxlLmpzJztcbmltcG9ydCAnLi9yZXNwLXN0eWxlLmpzJztcblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vYXBwL2V4dHJhLXN0eWxlLmpzXG4gKiovIl0sInNvdXJjZVJvb3QiOiIifQ==");

/***/ },
/* 1 */
/***/ function(module, exports) {

	eval("'use strict';\n\n(function ($) {\n\t$.fn.extraStyle = function (arg) {\n\t\tvar target = this.selector;\n\t\t$(document).ready(function () {\n\t\t\t$(target).each(function () {\n\t\t\t\tfor (var prop in arg) {\n\t\t\t\t\tif (funcs[prop]) funcs[prop]($(this), arg[prop]);else $(this).css(prop, arg[prop]);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t};\n\tvar funcs = {\n\t\tratio: function ratio($target, value) {\n\t\t\t$target.outerHeight(getDim($target).width * value);\n\t\t\t$(window).resize(function () {\n\t\t\t\t$target.outerHeight(getDim($target).width * value);\n\t\t\t});\n\t\t},\n\t\tfitted: function fitted($target, value) {\n\t\t\tif (!$target.is('img') || value != 'yes') return;\n\t\t\t$target.parent().css('overflow', 'hidden');\n\t\t\t$target.css('width', '100%');\n\n\t\t\t//if($target.width() && $target.height()) fitAndCrop($target);\n\t\t\t//else $target.on('load', function(){ fitAndCrop($target); });\n\t\t\t$target.on('load', function () {\n\t\t\t\tfitAndCrop($target);\n\t\t\t});\n\t\t\t$target.on('resize', function () {\n\t\t\t\t$target.css({ 'width': '', 'height': '', 'margin-left': '', 'margin-top': '' });\n\t\t\t\tfitAndCrop($target);\n\t\t\t});\n\t\t\t$(window).resize(function () {\n\t\t\t\t$target.css({ 'width': '', 'height': '', 'margin-left': '', 'margin-top': '' });\n\t\t\t\tfitAndCrop($target);\n\t\t\t});\n\n\t\t\tfunction fitAndCrop($image) {\n\t\t\t\tvar width = getDim($image).width;\n\t\t\t\tvar height = getDim($image).height;\n\t\t\t\tvar wrapWidth = getDim($image.parent()).width;\n\t\t\t\tvar wrapHeight = getDim($image.parent()).height;\n\t\t\t\tvar ratio = wrapWidth / width;\n\t\t\t\tif (height * ratio < wrapHeight) {\n\t\t\t\t\tratio = wrapHeight / height;\n\t\t\t\t\tvar nH = height * ratio;\n\t\t\t\t\tvar nW = width * ratio;\n\t\t\t\t\t$image.css({ width: nW, height: nH });\n\t\t\t\t\t$image.css({ 'margin-left': (wrapWidth - nW) / 2, 'margin-top': 0 });\n\t\t\t\t} else {\n\t\t\t\t\tvar nH = height * ratio;\n\t\t\t\t\tvar nW = width * ratio;\n\t\t\t\t\t$image.css({ width: nW, height: nH });\n\t\t\t\t\t$image.css({ 'margin-top': (wrapHeight - nH) / 2, 'margin-left': 0 });\n\t\t\t\t}\n\t\t\t}\n\t\t} //fittted\n\t};\n\tfunction getDim($obj) {\n\t\treturn $obj[0].getBoundingClientRect();\n\t}\n})(jQuery);//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcHAvc3RhdGljLXN0eWxlLmpzPzg2ZmYiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxDQUFDLFVBQVMsQ0FBVCxFQUFXO0FBQ1gsR0FBRSxFQUFGLENBQUssVUFBTCxHQUFrQixVQUFTLEdBQVQsRUFBYTtBQUM5QixNQUFJLFNBQVMsS0FBSyxRQUFMLENBRGlCO0FBRTlCLElBQUUsUUFBRixFQUFZLEtBQVosQ0FBa0IsWUFBVTtBQUMzQixLQUFFLE1BQUYsRUFBVSxJQUFWLENBQWUsWUFBVTtBQUN4QixTQUFJLElBQUksSUFBSixJQUFZLEdBQWhCLEVBQW9CO0FBQ25CLFNBQUcsTUFBTSxJQUFOLENBQUgsRUFBZ0IsTUFBTSxJQUFOLEVBQVksRUFBRSxJQUFGLENBQVosRUFBcUIsSUFBSSxJQUFKLENBQXJCLEVBQWhCLEtBQ0ssRUFBRSxJQUFGLEVBQVEsR0FBUixDQUFZLElBQVosRUFBa0IsSUFBSSxJQUFKLENBQWxCLEVBREw7S0FERDtJQURjLENBQWYsQ0FEMkI7R0FBVixDQUFsQixDQUY4QjtFQUFiLENBRFA7QUFZWCxLQUFJLFFBQVE7QUFDWCxTQUFPLGVBQVMsT0FBVCxFQUFrQixLQUFsQixFQUF3QjtBQUM5QixXQUFRLFdBQVIsQ0FBb0IsT0FBTyxPQUFQLEVBQWdCLEtBQWhCLEdBQXdCLEtBQXhCLENBQXBCLENBRDhCO0FBRTlCLEtBQUUsTUFBRixFQUFVLE1BQVYsQ0FBaUIsWUFBVTtBQUMxQixZQUFRLFdBQVIsQ0FBb0IsT0FBTyxPQUFQLEVBQWdCLEtBQWhCLEdBQXdCLEtBQXhCLENBQXBCLENBRDBCO0lBQVYsQ0FBakIsQ0FGOEI7R0FBeEI7QUFNUCxVQUFRLGdCQUFTLE9BQVQsRUFBa0IsS0FBbEIsRUFBd0I7QUFDL0IsT0FBRyxDQUFDLFFBQVEsRUFBUixDQUFXLEtBQVgsQ0FBRCxJQUFzQixTQUFTLEtBQVQsRUFBZ0IsT0FBekM7QUFDQSxXQUFRLE1BQVIsR0FBaUIsR0FBakIsQ0FBcUIsVUFBckIsRUFBaUMsUUFBakMsRUFGK0I7QUFHL0IsV0FBUSxHQUFSLENBQVksT0FBWixFQUFxQixNQUFyQjs7OztBQUgrQixVQU8vQixDQUFRLEVBQVIsQ0FBVyxNQUFYLEVBQW1CLFlBQVU7QUFBRSxlQUFXLE9BQVgsRUFBRjtJQUFWLENBQW5CLENBUCtCO0FBUS9CLFdBQVEsRUFBUixDQUFXLFFBQVgsRUFBcUIsWUFBVTtBQUM5QixZQUFRLEdBQVIsQ0FBWSxFQUFFLFNBQVMsRUFBVCxFQUFhLFVBQVUsRUFBVixFQUFjLGVBQWUsRUFBZixFQUFtQixjQUFjLEVBQWQsRUFBNUQsRUFEOEI7QUFFOUIsZUFBVyxPQUFYLEVBRjhCO0lBQVYsQ0FBckIsQ0FSK0I7QUFZL0IsS0FBRSxNQUFGLEVBQVUsTUFBVixDQUFpQixZQUFVO0FBQzFCLFlBQVEsR0FBUixDQUFZLEVBQUUsU0FBUyxFQUFULEVBQWEsVUFBVSxFQUFWLEVBQWMsZUFBZSxFQUFmLEVBQW1CLGNBQWMsRUFBZCxFQUE1RCxFQUQwQjtBQUUxQixlQUFXLE9BQVgsRUFGMEI7SUFBVixDQUFqQixDQVorQjs7QUFpQi9CLFlBQVMsVUFBVCxDQUFvQixNQUFwQixFQUEyQjtBQUMxQixRQUFJLFFBQVEsT0FBTyxNQUFQLEVBQWUsS0FBZixDQURjO0FBRTFCLFFBQUksU0FBUyxPQUFPLE1BQVAsRUFBZSxNQUFmLENBRmE7QUFHMUIsUUFBSSxZQUFZLE9BQU8sT0FBTyxNQUFQLEVBQVAsRUFBd0IsS0FBeEIsQ0FIVTtBQUkxQixRQUFJLGFBQWEsT0FBTyxPQUFPLE1BQVAsRUFBUCxFQUF3QixNQUF4QixDQUpTO0FBSzFCLFFBQUksUUFBUSxZQUFZLEtBQVosQ0FMYztBQU0xQixRQUFHLFNBQVMsS0FBVCxHQUFpQixVQUFqQixFQUE0QjtBQUM5QixhQUFRLGFBQWEsTUFBYixDQURzQjtBQUU5QixTQUFJLEtBQUssU0FBUyxLQUFULENBRnFCO0FBRzlCLFNBQUksS0FBSyxRQUFRLEtBQVIsQ0FIcUI7QUFJOUIsWUFBTyxHQUFQLENBQVcsRUFBRSxPQUFPLEVBQVAsRUFBVyxRQUFRLEVBQVIsRUFBeEIsRUFKOEI7QUFLOUIsWUFBTyxHQUFQLENBQVcsRUFBRSxlQUFlLENBQUMsWUFBVSxFQUFWLENBQUQsR0FBZSxDQUFmLEVBQWtCLGNBQWMsQ0FBZCxFQUE5QyxFQUw4QjtLQUEvQixNQU1PO0FBQ04sU0FBSSxLQUFLLFNBQVMsS0FBVCxDQURIO0FBRU4sU0FBSSxLQUFLLFFBQVEsS0FBUixDQUZIO0FBR04sWUFBTyxHQUFQLENBQVcsRUFBRSxPQUFPLEVBQVAsRUFBVyxRQUFRLEVBQVIsRUFBeEIsRUFITTtBQUlOLFlBQU8sR0FBUCxDQUFXLEVBQUUsY0FBYyxDQUFDLGFBQVcsRUFBWCxDQUFELEdBQWdCLENBQWhCLEVBQW1CLGVBQWUsQ0FBZixFQUE5QyxFQUpNO0tBTlA7SUFORDtHQWpCTztBQVBHLEVBQVIsQ0FaTztBQXlEWCxVQUFTLE1BQVQsQ0FBZ0IsSUFBaEIsRUFBcUI7QUFDcEIsU0FBTyxLQUFLLENBQUwsRUFBUSxxQkFBUixFQUFQLENBRG9CO0VBQXJCO0NBekRBLENBQUQsQ0E0REcsTUE1REgiLCJmaWxlIjoiMS5qcyIsInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbigkKXtcblx0JC5mbi5leHRyYVN0eWxlID0gZnVuY3Rpb24oYXJnKXtcblx0XHR2YXIgdGFyZ2V0ID0gdGhpcy5zZWxlY3Rvcjtcblx0XHQkKGRvY3VtZW50KS5yZWFkeShmdW5jdGlvbigpe1xuXHRcdFx0JCh0YXJnZXQpLmVhY2goZnVuY3Rpb24oKXtcblx0XHRcdFx0Zm9yKHZhciBwcm9wIGluIGFyZyl7XG5cdFx0XHRcdFx0aWYoZnVuY3NbcHJvcF0pIGZ1bmNzW3Byb3BdKCQodGhpcyksIGFyZ1twcm9wXSk7XG5cdFx0XHRcdFx0ZWxzZSAkKHRoaXMpLmNzcyhwcm9wLCBhcmdbcHJvcF0pO1xuXHRcdFx0XHR9XG5cdFx0XHR9KTtcblx0XHR9KTtcblx0fVxuXHR2YXIgZnVuY3MgPSB7XG5cdFx0cmF0aW86IGZ1bmN0aW9uKCR0YXJnZXQsIHZhbHVlKXtcblx0XHRcdCR0YXJnZXQub3V0ZXJIZWlnaHQoZ2V0RGltKCR0YXJnZXQpLndpZHRoICogdmFsdWUpO1xuXHRcdFx0JCh3aW5kb3cpLnJlc2l6ZShmdW5jdGlvbigpe1xuXHRcdFx0XHQkdGFyZ2V0Lm91dGVySGVpZ2h0KGdldERpbSgkdGFyZ2V0KS53aWR0aCAqIHZhbHVlKTtcblx0XHRcdH0pO1xuXHRcdH0sXG5cdFx0Zml0dGVkOiBmdW5jdGlvbigkdGFyZ2V0LCB2YWx1ZSl7XG5cdFx0XHRpZighJHRhcmdldC5pcygnaW1nJykgfHwgdmFsdWUgIT0gJ3llcycpIHJldHVybjtcblx0XHRcdCR0YXJnZXQucGFyZW50KCkuY3NzKCdvdmVyZmxvdycsICdoaWRkZW4nKTtcblx0XHRcdCR0YXJnZXQuY3NzKCd3aWR0aCcsICcxMDAlJyk7XG5cblx0XHRcdC8vaWYoJHRhcmdldC53aWR0aCgpICYmICR0YXJnZXQuaGVpZ2h0KCkpIGZpdEFuZENyb3AoJHRhcmdldCk7XG5cdFx0XHQvL2Vsc2UgJHRhcmdldC5vbignbG9hZCcsIGZ1bmN0aW9uKCl7IGZpdEFuZENyb3AoJHRhcmdldCk7IH0pO1xuXHRcdFx0JHRhcmdldC5vbignbG9hZCcsIGZ1bmN0aW9uKCl7IGZpdEFuZENyb3AoJHRhcmdldCk7IH0pO1xuXHRcdFx0JHRhcmdldC5vbigncmVzaXplJywgZnVuY3Rpb24oKXtcblx0XHRcdFx0JHRhcmdldC5jc3MoeyAnd2lkdGgnOiAnJywgJ2hlaWdodCc6ICcnLCAnbWFyZ2luLWxlZnQnOiAnJywgJ21hcmdpbi10b3AnOiAnJyB9KTtcblx0XHRcdFx0Zml0QW5kQ3JvcCgkdGFyZ2V0KTtcblx0XHRcdH0pO1xuXHRcdFx0JCh3aW5kb3cpLnJlc2l6ZShmdW5jdGlvbigpe1xuXHRcdFx0XHQkdGFyZ2V0LmNzcyh7ICd3aWR0aCc6ICcnLCAnaGVpZ2h0JzogJycsICdtYXJnaW4tbGVmdCc6ICcnLCAnbWFyZ2luLXRvcCc6ICcnIH0pO1xuXHRcdFx0XHRmaXRBbmRDcm9wKCR0YXJnZXQpO1xuXHRcdFx0fSk7XG5cblx0XHRcdGZ1bmN0aW9uIGZpdEFuZENyb3AoJGltYWdlKXtcblx0XHRcdFx0dmFyIHdpZHRoID0gZ2V0RGltKCRpbWFnZSkud2lkdGg7XG5cdFx0XHRcdHZhciBoZWlnaHQgPSBnZXREaW0oJGltYWdlKS5oZWlnaHQ7XG5cdFx0XHRcdHZhciB3cmFwV2lkdGggPSBnZXREaW0oJGltYWdlLnBhcmVudCgpKS53aWR0aDtcblx0XHRcdFx0dmFyIHdyYXBIZWlnaHQgPSBnZXREaW0oJGltYWdlLnBhcmVudCgpKS5oZWlnaHQ7XG5cdFx0XHRcdHZhciByYXRpbyA9IHdyYXBXaWR0aCAvIHdpZHRoO1xuXHRcdFx0XHRpZihoZWlnaHQgKiByYXRpbyA8IHdyYXBIZWlnaHQpe1xuXHRcdFx0XHRcdHJhdGlvID0gd3JhcEhlaWdodCAvIGhlaWdodDtcblx0XHRcdFx0XHR2YXIgbkggPSBoZWlnaHQgKiByYXRpbztcblx0XHRcdFx0XHR2YXIgblcgPSB3aWR0aCAqIHJhdGlvO1xuXHRcdFx0XHRcdCRpbWFnZS5jc3MoeyB3aWR0aDogblcsIGhlaWdodDogbkggfSk7XG5cdFx0XHRcdFx0JGltYWdlLmNzcyh7ICdtYXJnaW4tbGVmdCc6ICh3cmFwV2lkdGgtblcpLzIsICdtYXJnaW4tdG9wJzogMCB9KTtcblx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHR2YXIgbkggPSBoZWlnaHQgKiByYXRpbztcblx0XHRcdFx0XHR2YXIgblcgPSB3aWR0aCAqIHJhdGlvO1xuXHRcdFx0XHRcdCRpbWFnZS5jc3MoeyB3aWR0aDogblcsIGhlaWdodDogbkggfSk7XG5cdFx0XHRcdFx0JGltYWdlLmNzcyh7ICdtYXJnaW4tdG9wJzogKHdyYXBIZWlnaHQtbkgpLzIsICdtYXJnaW4tbGVmdCc6IDAgfSk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9Ly9maXR0dGVkXG5cdH1cblx0ZnVuY3Rpb24gZ2V0RGltKCRvYmope1xuXHRcdHJldHVybiAkb2JqWzBdLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xuXHR9XG59KShqUXVlcnkpO1xuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9hcHAvc3RhdGljLXN0eWxlLmpzXG4gKiovIl0sInNvdXJjZVJvb3QiOiIifQ==");

/***/ },
/* 2 */
/***/ function(module, exports) {

	eval("'use strict';\n\n(function ($) {\n\tvar _bp = [320, 768, 1024, 1280];\n\tvar _bpi, _ww;\n\n\t$(window).resize(function () {\n\t\t_ww = window.innerWidth;\n\t\t_bpi = getBpi();\n\t\t$(window).trigger('completeResize');\n\t});\n\t$(document).ready(function () {\n\t\tvar scrollbar = window.innerWidth != $(window).outerWidth();\n\t\tsetInterval(function () {\n\t\t\tif (scrollbar && window.innerWidth == $(window).outerWidth()) {\n\t\t\t\t$(window).trigger('changeScrollbar');scrollbar = false;\n\t\t\t} else if (!scrollbar && window.innerWidth != $(window).outerWidth()) {\n\t\t\t\t$(window).trigger('changeScrollbar');scrollbar = true;\n\t\t\t}\n\t\t}, 100);\n\t});\n\t$.respStyle = function (arg) {\n\t\tvar bp = [];\n\t\tvar array = arg.split(' ');\n\t\tif (array.length < 2) {\n\t\t\tconsole.error('Error: the length of break points');return false;\n\t\t}\n\t\tfor (var i = 0, len = array.length; i < len; i++) {\n\t\t\tif ($.isNumeric(array[i])) bp.push(parseFloat(array[i]));\n\t\t}\n\t\t_bp = bp;\n\t};\n\t$.fn.respStyle = function (arg) {\n\t\tinit();\n\t\tvar target = this.selector;\n\t\t$(document).ready(function () {\n\t\t\t$(target).each(function () {\n\t\t\t\tvar $target = $(this);\n\t\t\t\tvar styleData = convToObj(arg);if (!isValid(styleData)) return;\n\t\t\t\tvar style = calcStyle(styleData);\n\t\t\t\t$target.css(style);\n\t\t\t\t$(window).on('completeResize', function () {\n\t\t\t\t\t$target.css(calcStyle(styleData));\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t};\n\t$.fn.respGrid = function (arg) {\n\t\tinit();\n\t\tvar target = this.selector;\n\t\t$(document).ready(function () {\n\t\t\t$(target).each(function () {\n\t\t\t\t$(this).css('overflow', 'hidden');\n\t\t\t\t$(this).children('div').addClass('es').addClass('es-cell').css({ float: 'left', overflow: 'hidden' });\n\t\t\t\tif ($(this).is('.es.es-cell')) $(this).addClass('es-nested');\n\t\t\t\tvar $target = $(this);\n\t\t\t\tvar gridData = convToObjGrid(arg, $target.children('.es.es-cell').length);\n\t\t\t\tvar curGData = calcGrid(gridData);\n\t\t\t\tadjustCell($target, curGData);\n\t\t\t\t$(window).on('completeResize', function () {\n\t\t\t\t\tcurGData = calcGrid(gridData);\n\t\t\t\t\tadjustCell($target, curGData);\n\t\t\t\t});\n\t\t\t\t$(window).on('changeScrollbar', function () {\n\t\t\t\t\tadjustWidth($target, curGData);\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t};\n\t// style ////\n\tfunction convToObj(arg) {\n\t\tvar data = {};\n\t\tfor (var prop in arg) {\n\t\t\tvar array = arg[prop].split(' ');\n\t\t\tvar obj = { series: [], max: false, unit: 'px', func: 'linear' };\n\t\t\tfor (var i = 0, len = array.length; i < len; i++) {\n\t\t\t\tif ($.isNumeric(array[i])) obj.series.push(parseFloat(array[i]));else if (isNotNumVal(array[i])) obj.series.push(array[i]);else if (isUnit(array[i])) obj.unit = array[i];else if (array[i] === 'max') obj.max = true;else if (array[i] === 'linear' || array[i] === 'step' || array[i] === 'saw') obj.func = array[i];\n\t\t\t}\n\t\t\tdata[prop] = obj;\n\t\t}\n\t\treturn data;\n\t}\n\tfunction calcStyle(styleData) {\n\t\tvar style = {};\n\t\tfor (var prop in styleData) {\n\t\t\tif (!isNotNumProp(prop)) {\n\t\t\t\tstyle[prop] = calc(styleData[prop].series, styleData[prop].max, styleData[prop].func) + styleData[prop].unit;\n\t\t\t} else {\n\t\t\t\tstyle[prop] = pick(styleData[prop].series);\n\t\t\t}\n\t\t}\n\t\treturn style;\n\t}\n\t// grid ////\n\tfunction adjustCell($target, curGData) {\n\t\tvar preW = $target.outerWidth();\n\t\tvar gut = curGData.gutter;\n\t\tvar cols = curGData.columns;\n\t\tvar cells = curGData.cells;\n\t\tvar $cells = $target.children('.es.es-cell');\n\t\tvar length = $cells.length;\n\t\tvar cw = (getDim($target).width - gut * (cols - 1)) / cols;\n\t\tvar maxCh = 0;\n\t\t$cells.css({ 'margin-right': 0, 'margin-top': 0 });\n\t\tif (curGData.ratio !== 'auto') $cells.css({ width: 0, height: 0 });else $cells.css({ width: 0, height: 0 });\n\t\t$cells.each(function (index) {\n\t\t\t$(this).outerWidth(cw * cells[index] + gut * (cells[index] - 1));\n\t\t\tif ((index + 1) % cols !== 0 && index < length - 1) $(this).css({ 'margin-right': gut });\n\t\t\tif (index >= cols) $(this).css({ 'margin-top': gut });\n\t\t\tif (curGData.ratio === 'auto') {\n\t\t\t\t$(this).css({ height: '' });\n\t\t\t\tif (maxCh < getDim($(this)).height) maxCh = getDim($(this)).height;\n\t\t\t\tif (cols !== 1 && (index + 1) % cols === 0) {\n\t\t\t\t\tfor (var i = index - cols + 1; i <= index; i++) {\n\t\t\t\t\t\t$cells.eq(i).outerHeight(maxCh);\n\t\t\t\t\t}maxCh = 0;\n\t\t\t\t} else if (cols !== 1 && index === length - 1) {\n\t\t\t\t\tfor (var i = Math.floor((index + 1) / cols) * cols; i <= index; i++) {\n\t\t\t\t\t\t$cells.eq(i).outerHeight(maxCh);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar height = cw * curGData.ratio;\n\t\t\t\tif ($target.is('.es.es-nested')) height -= gut - gut / Math.ceil(length / cols);\n\t\t\t\t$(this).outerHeight(height);\n\t\t\t}\n\t\t});\n\t\tif (preW != $target.outerWidth()) {\n\t\t\tcw = (getDim($target).width - gut * (cols - 1)) / cols;\n\t\t\t$cells.each(function (index) {\n\t\t\t\t$(this).outerWidth(cw * cells[index] + gut * (cells[index] - 1));\n\t\t\t});\n\t\t}\n\t}\n\tfunction adjustWidth($target, curGData) {\n\t\tvar gut = curGData.gutter;\n\t\tvar cols = curGData.columns;\n\t\tvar cells = curGData.cells;\n\t\tvar $cells = $target.children('.es.es-cell');\n\t\tvar cw = (getDim($target).width - gut * (cols - 1)) / cols;\n\t\t$cells.each(function (index) {\n\t\t\t$(this).outerWidth(cw * cells[index] + gut * (cells[index] - 1));\n\t\t});\n\t}\n\tfunction convToObjGrid(arg, numCell) {\n\t\tvar gridData = {\n\t\t\tcolumns: [], ratio: [],\n\t\t\tgutter: { series: [], max: false, func: 'linear' },\n\t\t\tcells: []\n\t\t};\n\t\tvar columns = arg.columns.split(' ');if (columns.length < _bp.length) {\n\t\t\tconsole.error('Error: length of columns');return false;\n\t\t}\n\t\tfor (var i = 0, len = columns.length; i < len; i++) {\n\t\t\tif ($.isNumeric(columns[i])) gridData.columns.push(parseInt(columns[i]));\n\t\t}\n\t\tif (arg.ratio === 'auto') {\n\t\t\tfor (var i = 0, len = _bp.length; i < len; i++) {\n\t\t\t\tgridData.ratio.push('auto');\n\t\t\t}\n\t\t} else {\n\t\t\tvar ratio = arg.ratio.split(' ');if (ratio.length < _bp.length) {\n\t\t\t\tconsole.error('Error: length of ratio');return false;\n\t\t\t}\n\t\t\tfor (var i = 0, len = ratio.length; i < len; i++) {\n\t\t\t\tif ($.isNumeric(ratio[i])) gridData.ratio.push(parseFloat(ratio[i]));\n\t\t\t}\n\t\t}\n\t\tvar gutter = arg.gutter.split(' ');\n\t\tfor (var i = 0, len = gutter.length; i < len; i++) {\n\t\t\tif ($.isNumeric(gutter[i])) gridData.gutter.series.push(parseFloat(gutter[i]));else if (isUnit(gutter[i])) gridData.gutter.unit = gutter[i];else if (gutter[i] === 'max') gridData.gutter.max = true;else if (gutter[i] === 'linear' || gutter[i] === 'step' || gutter[i] === 'saw') gridData.gutter.func = gutter[i];\n\t\t}\n\t\tif (gridData.gutter.series.length < _bp.length) {\n\t\t\tconsole.error('Error: length of gutter');return false;\n\t\t}\n\t\tfor (var prop in arg) {\n\t\t\tgridData.cells = new Array(numCell);\n\t\t\tif (prop.match(/^cell/)) {\n\t\t\t\tvar index = parseInt(prop.replace(/^cell/, ''));\n\t\t\t\tvar values = [];$.each(arg[prop].split(' '), function (index, value) {\n\t\t\t\t\tvalues.push(parseInt(value));\n\t\t\t\t});\n\t\t\t\tif (index < numCell) gridData.cells[index] = values;\n\t\t\t}\n\t\t}\n\t\treturn gridData;\n\t}\n\tfunction calcGrid(data) {\n\t\tvar cur = {},\n\t\t    idx;\n\t\tif (_bpi >= 0) idx = _bpi;else if (_bpi == -1) idx = 0;else if (_bpi == -2) idx = _bp.length - 1;\n\t\tcur.columns = data.columns[idx];\n\t\tcur.ratio = data.ratio[idx];\n\t\tcur.gutter = calc(data.gutter.series, data.gutter.max, data.gutter.func);\n\t\tcur.cells = [];\n\t\tfor (var i = 0, len = data.cells.length; i < len; i++) {\n\t\t\tif (data.cells[i]) cur.cells[i] = data.cells[i][idx];else cur.cells[i] = 1;\n\t\t}\n\t\treturn cur;\n\t}\n\t// common ////\n\tfunction isValid(data) {\n\t\tfor (var prop in data) {\n\t\t\tif (data[prop].series.length < _bp.length) {\n\t\t\t\tconsole.error('Error: the length of series in '.prop);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (data[prop].func === 'saw' && data[prop].series.length < _bp.length * 2) {\n\t\t\t\tconsole.error('Error: the length of series in '.prop);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\tfunction isUnit(value) {\n\t\tvar units = ['em', 'ex', '%', 'px', 'cm', 'mm', 'in', 'pt', 'pc', 'ch', 'rem', 'vh', 'vw', 'vmin', 'vmax'];\n\t\tfor (var i = 0, len = units.length; i < len; i++) {\n\t\t\tif (value == units[i]) return true;\n\t\t}\n\t\treturn false;\n\t}\n\tfunction isNotNumVal(value) {\n\t\tvar values = ['left', 'right', 'none', 'absolute', 'fixed', 'static', 'hidden', 'scroll', 'auto', 'block', 'inline', 'inline-block'];\n\t\tfor (var i = 0, len = values.length; i < len; i++) {\n\t\t\tif (value == values[i]) return true;\n\t\t}\n\t\treturn false;\n\t}\n\tfunction isNotNumProp(prop) {\n\t\tvar props = ['float', 'position', 'overflow', 'overflow-x', 'overflow-y', 'display'];\n\t\tfor (var i = 0, len = props.length; i < len; i++) {\n\t\t\tif (prop == props[i]) return true;\n\t\t}\n\t\treturn false;\n\t}\n\tfunction pick(series) {\n\t\tif (_bpi >= 0) return series[_bpi];else if (_bpi == -1) return series[0];else if (_bpi == -2) return series[_bp.length - 1];\n\t}\n\tfunction calc(series, max, func) {\n\t\tvar i, j;\n\t\tif (_bpi >= 0) {\n\t\t\ti = _bpi;j = _bpi + 1;\n\t\t} else if (_bpi == -2) {\n\t\t\tif (max && func !== 'saw') return series[_bp.length - 1];else if (max && func === 'saw') return series[2 * (_bp.length - 1) + 1];\n\t\t\tif (func === 'linear' || func === 'saw') {\n\t\t\t\ti = _bp.length - 2;j = _bp.length - 1;\n\t\t\t} else if (func === 'step') i = _bp.length - 1;\n\t\t} else if (_bpi == -1) {\n\t\t\treturn series[0];\n\t\t}\n\t\tif (func === 'step') {\n\t\t\treturn series[i];\n\t\t} else if (func === 'linear') {\n\t\t\treturn (series[j] - series[i]) * (_ww - _bp[i]) / (_bp[j] - _bp[i]) + series[i];\n\t\t} else if (func === 'saw') {\n\t\t\tvar m = i * 2;\n\t\t\tvar n = m + 1;\n\t\t\treturn (series[n] - series[m]) * (_ww - _bp[i]) / (_bp[j] - _bp[i]) + series[m];\n\t\t}\n\t}\n\tfunction getBpi() {\n\t\tvar len = _bp.length;\n\t\tif (_ww < _bp[0]) return -1;else if (_ww >= _bp[len - 1]) return -2;else {\n\t\t\tfor (var i = 0; i < len - 1; i++) {\n\t\t\t\tif (_bp[i] <= _ww && _ww < _bp[i + 1]) return i;\n\t\t\t}\n\t\t}\n\t}\n\tfunction init() {\n\t\tif (!_ww) _ww = window.innerWidth;\n\t\tif (!_bpi) _bpi = getBpi();\n\t}\n\tfunction getDim($obj) {\n\t\treturn $obj[0].getBoundingClientRect();\n\t}\n})(jQuery);//# sourceMappingURL=data:application/json;base64,");

/***/ }
/******/ ]);